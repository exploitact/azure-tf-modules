# Default circleci pipeline. 
version: 2.1
orbs:
  slack: circleci/slack@4.9.3
jobs:
  plan-apply:
    working_directory: ~/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform init -input=false
            terraform plan -out tfapply -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  nani:
    docker:
      - image: 'cimg/base:stable'
    steps:
       - slack/notify:
          event: pass
          template: success_tagged_deploy_1 
       - slack/notify:
          event: fail
          template: basic_fail_1

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  notify:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "plain_text",
                      "text": "*Your terraform build has succeeded*",
                      "emoji": true
                    }
                  ]
                }
              ]
            }
          event: always


workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply:
          requires:
            - nani
      - nani:
          context: slack-secrets

      # - nani:
      #     context: slack-secrets
      #     requires:
      #       - plan-apply
      - notify: 
          context: slack-secrets
          type: approval
          requires:
            - plan-apply
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply
 